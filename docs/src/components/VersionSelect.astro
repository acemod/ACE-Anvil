---
import Select from '@astrojs/starlight/components/Select.astro'
import { config } from '~/utils/config'

const versions = config.ace.docsVersions
const currentBaseUrl = versions.find(v => import.meta.env.BASE_URL === v.baseUrl)?.baseUrl || versions[0].baseUrl;
---

<ace-version-select>
  <Select
    label="Select Version"
    icon="seti:clock"
    value={currentBaseUrl}
    options={versions.map(v => ({
      label: v.name,
      value: v.baseUrl,
      selected: v.baseUrl === currentBaseUrl,
    }))}
  />
</ace-version-select>

<script define:vars={{ currentBaseUrl }}>
class ACE_VersionSelect extends HTMLElement {
  constructor() {
    super()
    this.initSelectValue()
    this.querySelector('select')?.addEventListener('change', (e) => {
      if (e.currentTarget instanceof HTMLSelectElement) {
        if (e.currentTarget.value) {
          window.location.href = window.location.pathname.replace(currentBaseUrl, e.currentTarget.value)
        }
      }
    })
  }

  connectedCallback() {
    window.addEventListener('popstate', this.initSelectValue)
  }

  disconnectedCallback() {
    window.removeEventListener('popstate', this.initSelectValue)
  }

  initSelectValue() {
    const select = this.querySelector('select')
    if (select) {
      select.value = currentBaseUrl
    }
  }
}
customElements.get('ace-version-select') || customElements.define('ace-version-select', ACE_VersionSelect)
</script>
